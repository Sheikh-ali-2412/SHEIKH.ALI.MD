const config = require('../config');
const { cmd, commands } = require('../command');
const fs = require('fs');
const path = require('path');


const messages = {
    EN: {
        noQuotedMedia: "‚ùå Reply to a media message (video, image, or audio) with the `.save` command.",
        unsupportedMedia: "‚ùå Only video, image, or audio messages are supported.",
        success: "‚úÖ Successfully saved and sent the media file.",
        failure: "‚ùå Failed to save and send the media. Please try again."
    },
    SI: {
        noQuotedMedia: "‚ùå ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª `.save` ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫ ‡∑É‡∂∏‡∂ü ‡∂∏‡∑è‡∂∞‡∑ä‚Äç‡∂∫ ‡∂¥‡∂´‡∑í‡∑Ä‡∑í‡∂©‡∂∫‡∂ö‡∂ß (‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù, ‡∂¥‡∑í‡∂±‡∑ä‡∂≠‡∑ñ‡∂ª‡∂∫ ‡∑Ñ‡∑ù ‡∂ï‡∂©‡∑í‡∂∫‡∑ù) ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂†‡∑è‡∂ª ‡∂Ø‡∑ê‡∂ö‡∑ä‡∑Ä‡∂±‡∑ä‡∂±.",
        unsupportedMedia: "‚ùå ‡∂¥‡∂∏‡∂´‡∂ö‡∑ä ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù, ‡∂¥‡∑í‡∂±‡∑ä‡∂≠‡∑ñ‡∂ª‡∂∫ ‡∑Ñ‡∑ù ‡∂ï‡∂©‡∑í‡∂∫‡∑ù ‡∂¥‡∂´‡∑í‡∑Ä‡∑í‡∂©‡∂∫‡∂±‡∑ä ‡∂Ö‡∂±‡∑î‡∂ö‡∑ñ‡∂Ω‡∂∫‡∑í.",
        success: "‚úÖ ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂∏‡∑è‡∂∞‡∑ä‚Äç‡∂∫ ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä ‡∑É‡∑î‡∂ª‡∑ê‡∂ö‡∑î‡∑Ä‡∑è ‡∑É‡∑Ñ ‡∂ë‡∂∫ ‡∂∫‡∑Ä‡∂±‡∑ä‡∂±.",
        failure: "‚ùå ‡∂∏‡∑è‡∂∞‡∑ä‚Äç‡∂∫ ‡∑É‡∑î‡∂ª‡∑ê‡∂ö‡∑ì‡∂∏ ‡∑É‡∑Ñ ‡∂ë‡∂∫ ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏ ‡∂Ö‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö ‡∑Ä‡∑í‡∂∫. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±."
    }
};

cmd({
    pattern: "sav",
    react: "üìÅ",
    alias: ["store"],
    desc: "Save and send back a media file (image, video, or audio).",
    category: "media",
    use: ".save <caption>",
    filename: __filename,
},
async (conn, mek, m, { quoted, q, reply }) => {
    try {
        if (!quoted) {
            return reply(messages[config.LANG].noQuotedMedia);
        }

        const messageType = quoted.mtype;
        let mediaType;

        if (/video/.test(messageType)) {
            mediaType = "video";
        } else if (/image/.test(messageType)) {
            mediaType = "image";
        } else if (/audio/.test(messageType)) {
            mediaType = "audio";
        } else {
            return reply(messages[config.LANG].unsupportedMedia);
        }

        const mediaPath = await conn.downloadAndSaveMediaMessage(quoted);
        const filePath = path.resolve(mediaPath);

        const mediaMessage = {
            caption: q || '',
        };
        mediaMessage[mediaType] = { url: `file://${filePath}` };

        await conn.sendMessage(m.sender, mediaMessage, { quoted: mek });
        await reply(messages[config.LANG].success);
    } catch (error) {
        console.error(error);
        reply(messages[config.LANG].failure);
    }
});
